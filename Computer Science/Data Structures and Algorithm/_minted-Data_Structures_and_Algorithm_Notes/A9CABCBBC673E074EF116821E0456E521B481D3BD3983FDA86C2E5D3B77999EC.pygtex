\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cp}{\PYGZsh{}ifndef MY\PYGZus{}STACK\PYGZus{}H}
\PYG{c+cp}{\PYGZsh{}define MY\PYGZus{}STACK\PYGZus{}H}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}deque\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}iostream\PYGZgt{}}


\PYG{k}{namespace} \PYG{n}{cop4530} \PYG{p}{\PYGZob{}}

  \PYG{c+cm}{/***** class template Stack\PYGZlt{}T, Container\PYGZgt{} *****/}
  \PYG{k}{template} \PYG{o}{\PYGZlt{}}\PYG{k}{typename} \PYG{n}{T}\PYG{p}{,} \PYG{k}{typename} \PYG{n}{Container} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{deque}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{o}{\PYGZgt{}\PYGZgt{}}
  \PYG{k}{class} \PYG{n+nc}{Stack} \PYG{p}{\PYGZob{}}
    \PYG{k}{protected}\PYG{o}{:}
      \PYG{c+c1}{//internal container}
      \PYG{n}{Container} \PYG{n}{c}\PYG{p}{;}
      \PYG{c+c1}{//friend of Stack class}
      \PYG{c+c1}{//https://web.mst.edu/\PYGZti{}nmjxv3/articles/templates.html}
      \PYG{k}{template} \PYG{o}{\PYGZlt{}}\PYG{k}{typename} \PYG{n}{A}\PYG{p}{,} \PYG{k}{typename} \PYG{n}{B}\PYG{o}{\PYGZgt{}}
      \PYG{k}{friend} \PYG{k+kt}{bool} \PYG{k}{operator}\PYG{o}{==}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Stack}\PYG{o}{\PYGZlt{}}\PYG{n}{A}\PYG{p}{,}\PYG{n}{B}\PYG{o}{\PYGZgt{}\PYGZam{}} \PYG{n}{lhs}\PYG{p}{,} \PYG{k}{const} \PYG{n}{Stack}\PYG{o}{\PYGZlt{}}\PYG{n}{A}\PYG{p}{,}\PYG{n}{B}\PYG{o}{\PYGZgt{}\PYGZam{}} \PYG{n}{rhs}\PYG{p}{);}
      \PYG{k}{template} \PYG{o}{\PYGZlt{}}\PYG{k}{typename} \PYG{n}{A}\PYG{p}{,} \PYG{k}{typename} \PYG{n}{B}\PYG{o}{\PYGZgt{}}
      \PYG{k}{friend} \PYG{k+kt}{bool} \PYG{k}{operator}\PYG{o}{\PYGZlt{}=}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Stack}\PYG{o}{\PYGZlt{}}\PYG{n}{A}\PYG{p}{,}\PYG{n}{B}\PYG{o}{\PYGZgt{}\PYGZam{}} \PYG{n}{lhs}\PYG{p}{,} \PYG{k}{const} \PYG{n}{Stack}\PYG{o}{\PYGZlt{}}\PYG{n}{A}\PYG{p}{,}\PYG{n}{B}\PYG{o}{\PYGZgt{}\PYGZam{}} \PYG{n}{rhs}\PYG{p}{);}

    \PYG{k}{public}\PYG{o}{:}
      \PYG{c+c1}{//constructor, destructor, copy constructor, move constructor}
      \PYG{n}{Stack}\PYG{p}{();} \PYG{c+c1}{//default zero\PYGZhy{}argument constructor}
      \PYG{o}{\PYGZti{}}\PYG{n}{Stack}\PYG{p}{();} \PYG{c+c1}{//destructor}
      \PYG{n}{Stack}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Stack}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{p}{,} \PYG{n}{Container}\PYG{o}{\PYGZgt{}\PYGZam{}} \PYG{n}{rhs}\PYG{p}{);} \PYG{c+c1}{//copy constructor}
      \PYG{n}{Stack}\PYG{p}{(}\PYG{n}{Stack}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{p}{,} \PYG{n}{Container}\PYG{o}{\PYGZgt{}\PYGZam{}\PYGZam{}} \PYG{n}{rhs}\PYG{p}{);} \PYG{c+c1}{//move constructor}

      \PYG{c+c1}{// copy and move assignment operator}
      \PYG{n}{Stack}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{p}{,} \PYG{n}{Container}\PYG{o}{\PYGZgt{}\PYGZam{}} \PYG{k}{operator}\PYG{o}{=}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Stack}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{p}{,} \PYG{n}{Container}\PYG{o}{\PYGZgt{}\PYGZam{}} \PYG{n}{rhs}\PYG{p}{);} \PYG{c+c1}{//copy assignment operator=}
      \PYG{n}{Stack}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{p}{,} \PYG{n}{Container}\PYG{o}{\PYGZgt{}\PYGZam{}} \PYG{k}{operator}\PYG{o}{=}\PYG{p}{(}\PYG{n}{Stack}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{p}{,} \PYG{n}{Container}\PYG{o}{\PYGZgt{}\PYGZam{}\PYGZam{}} \PYG{n}{rhs}\PYG{p}{);} \PYG{c+c1}{//move assignment operator=}

      \PYG{c+c1}{// Member functions}
      \PYG{k+kt}{bool} \PYG{n+nf}{empty}\PYG{p}{()} \PYG{k}{const}\PYG{p}{;} \PYG{c+c1}{//returns true if the Stack contains no elements, and false otherwise}
      \PYG{k+kt}{void} \PYG{n+nf}{clear}\PYG{p}{();} \PYG{c+c1}{//delete all elements from the stack}
      \PYG{k+kt}{void} \PYG{n+nf}{push}\PYG{p}{(}\PYG{k}{const} \PYG{n}{T}\PYG{o}{\PYGZam{}} \PYG{n}{x}\PYG{p}{);} \PYG{c+c1}{//adds x to the Stack, copy version}
      \PYG{k+kt}{void} \PYG{n+nf}{push}\PYG{p}{(}\PYG{n}{T}\PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{x}\PYG{p}{);} \PYG{c+c1}{//adds x to the Stack, move version}
      \PYG{k+kt}{void} \PYG{n+nf}{pop}\PYG{p}{();} \PYG{c+c1}{//removes and discards the most recently added element of the Stack}
      \PYG{n}{T}\PYG{o}{\PYGZam{}} \PYG{n}{top}\PYG{p}{();} \PYG{c+c1}{//returns a reference to the most recently added element of the Stack}
      \PYG{k}{const} \PYG{n}{T}\PYG{o}{\PYGZam{}} \PYG{n}{top}\PYG{p}{()} \PYG{k}{const}\PYG{p}{;} \PYG{c+c1}{//returns a const reference to the most recently added element of the Stack}
      \PYG{k+kt}{int} \PYG{n+nf}{size}\PYG{p}{()} \PYG{k}{const}\PYG{p}{;} \PYG{c+c1}{//returns the number of elements stored in the Stack}
      \PYG{k+kt}{void} \PYG{n+nf}{print}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{ostream}\PYG{o}{\PYGZam{}} \PYG{n}{os}\PYG{p}{,} \PYG{k+kt}{char} \PYG{n}{ofc} \PYG{o}{=} \PYG{l+s+sc}{\PYGZsq{} \PYGZsq{}}\PYG{p}{)} \PYG{k}{const}\PYG{p}{;} \PYG{c+c1}{//print elements of Stack to ostream os; this function prints elements in the opposite order, the oldest element should be printed first (last in last print)}
  \PYG{p}{\PYGZcb{};}

  \PYG{c+cm}{/***** Overloading non\PYGZhy{}member global functions *****/}
  \PYG{k}{template} \PYG{o}{\PYGZlt{}}\PYG{k}{typename} \PYG{n}{T}\PYG{p}{,} \PYG{k}{typename} \PYG{n}{Container} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{deque}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{o}{\PYGZgt{}\PYGZgt{}}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{ostream}\PYG{o}{\PYGZam{}} \PYG{k}{operator}\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{ostream}\PYG{o}{\PYGZam{}} \PYG{n}{os}\PYG{p}{,} \PYG{k}{const} \PYG{n}{Stack}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{p}{,} \PYG{n}{Container}\PYG{o}{\PYGZgt{}\PYGZam{}} \PYG{n}{a}\PYG{p}{);} \PYG{c+c1}{//invokes the print() method to print the Stack\PYGZlt{}T, Container\PYGZgt{} a in the specified ostream}

  \PYG{k}{template} \PYG{o}{\PYGZlt{}}\PYG{k}{typename} \PYG{n}{T}\PYG{p}{,} \PYG{k}{typename} \PYG{n}{Container} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{deque}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{o}{\PYGZgt{}\PYGZgt{}}
  \PYG{k+kt}{bool} \PYG{k}{operator}\PYG{o}{==}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Stack}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{p}{,} \PYG{n}{Container}\PYG{o}{\PYGZgt{}\PYGZam{}} \PYG{n}{lhs}\PYG{p}{,} \PYG{k}{const} \PYG{n}{Stack}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{p}{,} \PYG{n}{Container}\PYG{o}{\PYGZgt{}\PYGZam{}} \PYG{n}{rhs}\PYG{p}{);} \PYG{c+c1}{// returns true if the two compared Stacks have the same elements, in the same order.}

  \PYG{k}{template} \PYG{o}{\PYGZlt{}}\PYG{k}{typename} \PYG{n}{T}\PYG{p}{,} \PYG{k}{typename} \PYG{n}{Container} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{deque}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{o}{\PYGZgt{}\PYGZgt{}}
  \PYG{k+kt}{bool} \PYG{k}{operator}\PYG{o}{!=}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Stack}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{p}{,} \PYG{n}{Container}\PYG{o}{\PYGZgt{}\PYGZam{}} \PYG{n}{lhs}\PYG{p}{,} \PYG{k}{const} \PYG{n}{Stack}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{p}{,} \PYG{n}{Container}\PYG{o}{\PYGZgt{}\PYGZam{}} \PYG{n}{rhs}\PYG{p}{);} \PYG{c+c1}{// opposite of operator==()}

  \PYG{k}{template} \PYG{o}{\PYGZlt{}}\PYG{k}{typename} \PYG{n}{T}\PYG{p}{,} \PYG{k}{typename} \PYG{n}{Container} \PYG{o}{=} \PYG{n}{std}\PYG{o}{::}\PYG{n}{deque}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{o}{\PYGZgt{}\PYGZgt{}}
  \PYG{k+kt}{bool} \PYG{k}{operator}\PYG{o}{\PYGZlt{}=}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Stack}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{p}{,} \PYG{n}{Container}\PYG{o}{\PYGZgt{}\PYGZam{}} \PYG{n}{lhs}\PYG{p}{,} \PYG{k}{const} \PYG{n}{Stack}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{p}{,} \PYG{n}{Container}\PYG{o}{\PYGZgt{}\PYGZam{}} \PYG{n}{rhs}\PYG{p}{);} \PYG{c+c1}{// returns true if every element in Stack lhs is smaller than or equal to the corresponding element of Statck rhs, until the end of lhs is reached}

  \PYG{c+c1}{//include the implementation file}
  \PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}stack.hpp\PYGZdq{}}

\PYG{p}{\PYGZcb{}}\PYG{c+c1}{// end of namespace cop4530}


\PYG{c+cp}{\PYGZsh{}endif}
\end{Verbatim}
