\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k}{template} \PYG{o}{\PYGZlt{}}\PYG{k}{class} \PYG{n+nc}{RandomAccessIterator}\PYG{p}{,} \PYG{k}{class} \PYG{n+nc}{Compare}\PYG{o}{\PYGZgt{}}
\PYG{k+kt}{void} \PYG{n}{Sort}\PYG{o}{::}\PYG{n}{quickSort}\PYG{p}{(}\PYG{n}{RandomAccessIterator} \PYG{n}{first}\PYG{p}{,} \PYG{n}{RandomAccessIterator} \PYG{n}{last}\PYG{p}{,} \PYG{n}{Compare} \PYG{n}{comp}\PYG{p}{)} \PYG{p}{\PYGZob{}}
  \PYG{c+c1}{//base case: small array}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{last} \PYG{o}{\PYGZhy{}} \PYG{n}{first} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{11}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{n}{insertionSort}\PYG{p}{(}\PYG{n}{first}\PYG{p}{,} \PYG{n}{last}\PYG{p}{,} \PYG{n}{comp}\PYG{p}{);}
    \PYG{k}{return}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}


  \PYG{c+c1}{//call a private routine to select pivot and move it to the slot before last}
  \PYG{c+c1}{//this is to prepare for partition}
  \PYG{n}{pivot}\PYG{p}{(}\PYG{n}{first}\PYG{p}{,} \PYG{n}{last}\PYG{p}{,} \PYG{n}{comp}\PYG{p}{);}

  \PYG{c+c1}{//begin partition}
  \PYG{c+c1}{//notice that, *(last \PYGZhy{} 2) is the pivot value}
  \PYG{k}{auto} \PYG{n}{i} \PYG{o}{=} \PYG{n}{first}\PYG{p}{;}
  \PYG{k}{auto} \PYG{n}{j} \PYG{o}{=} \PYG{n}{last} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{3}\PYG{p}{;}

  \PYG{k}{while} \PYG{p}{(}\PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{j}\PYG{p}{)} \PYG{p}{\PYGZob{}}\PYG{c+c1}{//begin moving i and j}
    \PYG{k}{while} \PYG{p}{(}\PYG{n}{comp}\PYG{p}{(}\PYG{o}{*}\PYG{n}{i}\PYG{p}{,} \PYG{o}{*}\PYG{p}{(}\PYG{n}{last} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{2}\PYG{p}{)))}
      \PYG{o}{++}\PYG{n}{i}\PYG{p}{;}
    \PYG{k}{while} \PYG{p}{(}\PYG{o}{!}\PYG{n}{comp}\PYG{p}{(}\PYG{o}{*}\PYG{n}{j}\PYG{p}{,} \PYG{o}{*}\PYG{p}{(}\PYG{n}{last} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{2}\PYG{p}{)))}
      \PYG{o}{\PYGZhy{}\PYGZhy{}}\PYG{n}{j}\PYG{p}{;}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{j}\PYG{p}{)} \PYG{c+c1}{//if i j not crossed yet}
      \PYG{n}{std}\PYG{o}{::}\PYG{n}{swap}\PYG{p}{(}\PYG{o}{*}\PYG{p}{(}\PYG{n}{i}\PYG{o}{++}\PYG{p}{),} \PYG{o}{*}\PYG{p}{(}\PYG{n}{j}\PYG{o}{\PYGZhy{}\PYGZhy{}}\PYG{p}{));}
  \PYG{p}{\PYGZcb{}}

  \PYG{c+c1}{//after the above loop, i and j crossed}
  \PYG{c+c1}{//swap *i and pivot to finish partition}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{swap}\PYG{p}{(}\PYG{o}{*}\PYG{n}{i}\PYG{p}{,} \PYG{o}{*}\PYG{p}{(}\PYG{n}{last} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{2}\PYG{p}{));}

  \PYG{c+c1}{//partition finished, now the loop has the structure:}
  \PYG{c+c1}{//\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{} pivot ++++++ or +++++ pivot \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
  \PYG{c+c1}{//next step is to call quick sort recursively to sort two sub\PYGZhy{}arrays}
  \PYG{n}{quickSort}\PYG{p}{(}\PYG{n}{first}\PYG{p}{,} \PYG{n}{i}\PYG{p}{,} \PYG{n}{comp}\PYG{p}{);}
  \PYG{n}{quickSort}\PYG{p}{(}\PYG{n}{i} \PYG{o}{+} \PYG{l+m+mi}{1}\PYG{p}{,} \PYG{n}{last}\PYG{p}{,} \PYG{n}{comp}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
