\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k}{template} \PYG{o}{\PYGZlt{}}\PYG{k}{class} \PYG{n+nc}{RandomAccessIterator}\PYG{p}{,} \PYG{k}{class} \PYG{n+nc}{Compare}\PYG{p}{,} \PYG{k}{class} \PYG{n+nc}{Element}\PYG{o}{\PYGZgt{}}
\PYG{k+kt}{void} \PYG{n}{Sort}\PYG{o}{::}\PYG{n}{mergeSort}\PYG{p}{(}\PYG{n}{RandomAccessIterator} \PYG{n}{first}\PYG{p}{,} \PYG{n}{RandomAccessIterator} \PYG{n}{last}\PYG{p}{,} \PYG{n}{Compare} \PYG{n}{comp}\PYG{p}{,} \PYG{n}{std}\PYG{o}{::}\PYG{n}{vector}\PYG{o}{\PYGZlt{}}\PYG{n}{Element}\PYG{o}{\PYGZgt{}\PYGZam{}} \PYG{n}{sorted\PYGZus{}array}\PYG{p}{)} \PYG{p}{\PYGZob{}}
  \PYG{c+c1}{// base case}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{first} \PYG{o}{+} \PYG{l+m+mi}{1} \PYG{o}{==} \PYG{n}{last}\PYG{p}{)}
    \PYG{k}{return}\PYG{p}{;}

  \PYG{c+c1}{// calculate the size of the array}
  \PYG{k+kt}{int} \PYG{n}{size} \PYG{o}{=} \PYG{n}{last} \PYG{o}{\PYGZhy{}} \PYG{n}{first}\PYG{p}{;}

  \PYG{c+c1}{// recursively call itself to sort the first half}
  \PYG{n}{mergeSort}\PYG{p}{(}\PYG{n}{first}\PYG{p}{,} \PYG{n}{first} \PYG{o}{+} \PYG{n}{size} \PYG{o}{/} \PYG{l+m+mi}{2}\PYG{p}{,} \PYG{n}{comp}\PYG{p}{,} \PYG{n}{sorted\PYGZus{}array}\PYG{p}{);}

  \PYG{c+c1}{// recursively call itself to sort the second half}
  \PYG{n}{mergeSort}\PYG{p}{(}\PYG{n}{first} \PYG{o}{+} \PYG{n}{size} \PYG{o}{/} \PYG{l+m+mi}{2}\PYG{p}{,} \PYG{n}{last}\PYG{p}{,} \PYG{n}{comp}\PYG{p}{,} \PYG{n}{sorted\PYGZus{}array}\PYG{p}{);}

  \PYG{c+c1}{// merge the sorted sub\PYGZhy{}array}
  \PYG{k}{auto} \PYG{n}{itr\PYGZus{}1} \PYG{o}{=} \PYG{n}{first}\PYG{p}{;} \PYG{c+c1}{// begin of sub\PYGZhy{}array\PYGZus{}1}
  \PYG{k}{auto} \PYG{n}{itr\PYGZus{}2} \PYG{o}{=} \PYG{n}{first} \PYG{o}{+} \PYG{n}{size} \PYG{o}{/} \PYG{l+m+mi}{2}\PYG{p}{;} \PYG{c+c1}{// begin of sub\PYGZhy{}array\PYGZus{}2}
  \PYG{k}{auto} \PYG{n}{itr\PYGZus{}array} \PYG{o}{=} \PYG{n}{sorted\PYGZus{}array}\PYG{p}{.}\PYG{n}{begin}\PYG{p}{();} \PYG{c+c1}{// begin of temporary array}

  \PYG{k}{while} \PYG{p}{(}\PYG{n}{itr\PYGZus{}1} \PYG{o}{!=} \PYG{n}{first} \PYG{o}{+} \PYG{n}{size} \PYG{o}{/} \PYG{l+m+mi}{2} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{itr\PYGZus{}2} \PYG{o}{!=} \PYG{n}{last}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{comp}\PYG{p}{(}\PYG{o}{*}\PYG{n}{itr\PYGZus{}1}\PYG{p}{,} \PYG{o}{*}\PYG{n}{itr\PYGZus{}2}\PYG{p}{))}
      \PYG{o}{*}\PYG{p}{(}\PYG{n}{itr\PYGZus{}array}\PYG{o}{++}\PYG{p}{)} \PYG{o}{=} \PYG{o}{*}\PYG{p}{(}\PYG{n}{itr\PYGZus{}1}\PYG{o}{++}\PYG{p}{);}

    \PYG{k}{else}
      \PYG{o}{*}\PYG{p}{(}\PYG{n}{itr\PYGZus{}array}\PYG{o}{++}\PYG{p}{)} \PYG{o}{=} \PYG{o}{*}\PYG{p}{(}\PYG{n}{itr\PYGZus{}2}\PYG{o}{++}\PYG{p}{);}
  \PYG{p}{\PYGZcb{}}

  \PYG{c+c1}{// after the while loop, one itr reached end}
  \PYG{c+c1}{// dump remaining sorted element into temporary container}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{itr\PYGZus{}1} \PYG{o}{==} \PYG{n}{first} \PYG{o}{+} \PYG{n}{size} \PYG{o}{/} \PYG{l+m+mi}{2}\PYG{p}{)}
    \PYG{k}{while} \PYG{p}{(}\PYG{n}{itr\PYGZus{}2} \PYG{o}{!=} \PYG{n}{last}\PYG{p}{)}
      \PYG{o}{*}\PYG{p}{(}\PYG{n}{itr\PYGZus{}array}\PYG{o}{++}\PYG{p}{)} \PYG{o}{=} \PYG{o}{*}\PYG{p}{(}\PYG{n}{itr\PYGZus{}2}\PYG{o}{++}\PYG{p}{);}

  \PYG{k}{else}
    \PYG{n+nf}{while} \PYG{p}{(}\PYG{n}{itr\PYGZus{}1} \PYG{o}{!=} \PYG{n}{first} \PYG{o}{+} \PYG{n}{size} \PYG{o}{/} \PYG{l+m+mi}{2}\PYG{p}{)}
      \PYG{o}{*}\PYG{p}{(}\PYG{n}{itr\PYGZus{}array}\PYG{o}{++}\PYG{p}{)} \PYG{o}{=} \PYG{o}{*}\PYG{p}{(}\PYG{n}{itr\PYGZus{}1}\PYG{o}{++}\PYG{p}{);}

  \PYG{c+c1}{// copy back sorted array}
  \PYG{k}{for} \PYG{p}{(}\PYG{n}{itr\PYGZus{}1} \PYG{o}{=} \PYG{n}{first}\PYG{p}{,} \PYG{n}{itr\PYGZus{}array} \PYG{o}{=} \PYG{n}{sorted\PYGZus{}array}\PYG{p}{.}\PYG{n}{begin}\PYG{p}{();} \PYG{n}{itr\PYGZus{}1} \PYG{o}{!=} \PYG{n}{last}\PYG{p}{;} \PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{o}{*}\PYG{p}{(}\PYG{n}{itr\PYGZus{}1}\PYG{o}{++}\PYG{p}{)} \PYG{o}{=} \PYG{o}{*}\PYG{p}{(}\PYG{n}{itr\PYGZus{}array}\PYG{o}{++}\PYG{p}{);}
  \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
