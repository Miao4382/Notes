\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}stdio.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}string.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}define MAXLINE 1000}

\PYG{k+kt}{int} \PYG{n+nf}{getlines}\PYG{p}{(}\PYG{k+kt}{char}\PYG{o}{*} \PYG{n}{line}\PYG{p}{,} \PYG{k+kt}{int} \PYG{n}{max}\PYG{p}{);}

\PYG{c+c1}{//find: print lines that match pattern from 1st arg}
\PYG{c+c1}{// with optional arguments enabled}
\PYG{k+kt}{int} \PYG{n+nf}{main}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{argc}\PYG{p}{,} \PYG{k+kt}{char}\PYG{o}{*} \PYG{n}{argv}\PYG{p}{[])} \PYG{p}{\PYGZob{}}
  \PYG{k+kt}{char} \PYG{n}{line}\PYG{p}{[}\PYG{n}{MAXLINE}\PYG{p}{];}  \PYG{c+c1}{// temporary container to hold line read from buffer}
  \PYG{k+kt}{char} \PYG{n}{c}\PYG{p}{;}  \PYG{c+c1}{// to check optional arguments}

  \PYG{k+kt}{int} \PYG{n}{line\PYGZus{}num} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}  \PYG{c+c1}{// record the number of line}
  \PYG{k+kt}{int} \PYG{n}{except} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}  \PYG{c+c1}{// flag of optional argument x, if this is true, print lines that doesn\PYGZsq{}t have pattern}
  \PYG{k+kt}{int} \PYG{n}{number} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}  \PYG{c+c1}{// flag for optional argument n , if this is true, print the corresponding line number}
  \PYG{k+kt}{int} \PYG{n}{found} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}


  \PYG{c+c1}{// check inputted arguments and set flag accordingly}
  \PYG{c+c1}{// use prefix to skip the first argv (which is the name of the function)}
  \PYG{k}{while} \PYG{p}{(}\PYG{o}{\PYGZhy{}\PYGZhy{}}\PYG{n}{argc} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{p}{(}\PYG{o}{*++}\PYG{n}{argv}\PYG{p}{)[}\PYG{l+m+mi}{0}\PYG{p}{]} \PYG{o}{==} \PYG{l+s+sc}{\PYGZsq{}\PYGZhy{}\PYGZsq{}}\PYG{p}{)}  \PYG{c+c1}{// outter while loop check each \PYGZdq{}\PYGZhy{}xxx\PYGZdq{} styled optional argument}
    \PYG{k}{while} \PYG{p}{(}\PYG{n}{c} \PYG{o}{=} \PYG{o}{*++}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{])} \PYG{p}{\PYGZob{}}  \PYG{c+c1}{// inner while loop check each char in the \PYGZdq{}\PYGZhy{}xxx\PYGZdq{} styled argument}
      \PYG{k}{switch} \PYG{p}{(}\PYG{n}{c}\PYG{p}{)} \PYG{p}{\PYGZob{}}
      \PYG{k}{case} \PYG{l+s+sc}{\PYGZsq{}x\PYGZsq{}}\PYG{o}{:}
	\PYG{n}{except} \PYG{o}{=} \PYG{l+m+mi}{1}\PYG{p}{;}
	\PYG{k}{break}\PYG{p}{;}
      \PYG{k}{case} \PYG{l+s+sc}{\PYGZsq{}n\PYGZsq{}}\PYG{o}{:}
	\PYG{n}{number} \PYG{o}{=} \PYG{l+m+mi}{1}\PYG{p}{;}
	\PYG{k}{break}\PYG{p}{;}
      \PYG{k}{default}\PYG{o}{:}
	\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}find: illegal option \PYGZpc{}c}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,} \PYG{n}{c}\PYG{p}{);}
	\PYG{n}{argc} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}  \PYG{c+c1}{// this will terminate the program}
	\PYG{n}{found} \PYG{o}{=} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{;}
	\PYG{k}{break}\PYG{p}{;}
      \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}

  \PYG{k}{if} \PYG{p}{(}\PYG{n}{argc} \PYG{o}{!=} \PYG{l+m+mi}{1}\PYG{p}{)}  \PYG{c+c1}{//we should have only one argument at this point, which is the pattern we are going to find. All optional arguments have been examed by the previous while loop}
    \PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Usage: find \PYGZhy{}x \PYGZhy{}n pattern}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{);}  \PYG{c+c1}{// print a message showing how to use this program}
  \PYG{k}{else}
    \PYG{k}{while} \PYG{p}{(}\PYG{n}{getlines}\PYG{p}{(}\PYG{n}{line}\PYG{p}{,} \PYG{n}{MAXLINE}\PYG{p}{)} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{p}{\PYGZob{}}
      \PYG{n}{line\PYGZus{}num}\PYG{o}{++}\PYG{p}{;}  \PYG{c+c1}{// update the line number}

      \PYG{c+cm}{/*Notes:}
\PYG{c+cm}{	Print the line based on value of variable except and the found result.}
\PYG{c+cm}{	To print a line, the truth value of found and except should be different. When except = 1, we print lines that not found, so found == 0;}
\PYG{c+cm}{	When except = 0, we print lines that are found, so found == 1;}
\PYG{c+cm}{      */}
      \PYG{k}{if} \PYG{p}{((}\PYG{n}{strstr}\PYG{p}{(}\PYG{n}{line}\PYG{p}{,} \PYG{o}{*}\PYG{n}{argv}\PYG{p}{)} \PYG{o}{!=} \PYG{n+nb}{NULL}\PYG{p}{)} \PYG{o}{!=} \PYG{n}{except}\PYG{p}{)} \PYG{p}{\PYGZob{}}
	\PYG{k}{if} \PYG{p}{(}\PYG{n}{number}\PYG{p}{)}  \PYG{c+c1}{// if the number flag is true, we print the line number}
	  \PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZpc{}d\PYGZdq{}}\PYG{p}{,} \PYG{n}{line\PYGZus{}num}\PYG{p}{);}
	\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZpc{}s\PYGZdq{}}\PYG{p}{,} \PYG{n}{line}\PYG{p}{);}
	\PYG{n}{found}\PYG{o}{++}\PYG{p}{;}
      \PYG{p}{\PYGZcb{}}

    \PYG{p}{\PYGZcb{}}

  \PYG{k}{return} \PYG{n}{found}\PYG{p}{;}

\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{int} \PYG{n+nf}{getlines}\PYG{p}{(}\PYG{k+kt}{char}\PYG{o}{*} \PYG{n}{line}\PYG{p}{,} \PYG{k+kt}{int} \PYG{n}{max}\PYG{p}{)} \PYG{p}{\PYGZob{}}
  \PYG{k+kt}{char} \PYG{n}{ch}\PYG{p}{;}

  \PYG{k}{while} \PYG{p}{(}\PYG{o}{\PYGZhy{}\PYGZhy{}}\PYG{n}{max} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{p}{(}\PYG{n}{ch} \PYG{o}{=} \PYG{n}{getchar}\PYG{p}{())} \PYG{o}{!=} \PYG{n}{EOF} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{ch} \PYG{o}{!=} \PYG{l+s+sc}{\PYGZsq{}\PYGZbs{}n\PYGZsq{}}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{o}{*}\PYG{p}{(}\PYG{n}{line}\PYG{o}{++}\PYG{p}{)} \PYG{o}{=} \PYG{n}{ch}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}

  \PYG{k}{if} \PYG{p}{(}\PYG{n}{ch} \PYG{o}{==} \PYG{l+s+sc}{\PYGZsq{}\PYGZbs{}n\PYGZsq{}}\PYG{p}{)}
    \PYG{o}{*}\PYG{p}{(}\PYG{n}{line}\PYG{o}{++}\PYG{p}{)} \PYG{o}{=} \PYG{n}{ch}\PYG{p}{;}  \PYG{c+c1}{// no need to worry about not enough space, since if ch == \PYGZsq{}\PYGZbs{}n\PYGZsq{}, it is not stored in line yet, because the loop was not executed}
  \PYG{o}{*}\PYG{n}{line} \PYG{o}{=} \PYG{l+s+sc}{\PYGZsq{}\PYGZbs{}0\PYGZsq{}}\PYG{p}{;}

  \PYG{k}{if} \PYG{p}{(}\PYG{n}{ch} \PYG{o}{==} \PYG{n}{EOF}\PYG{p}{)}
    \PYG{k}{return} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{;}

  \PYG{k}{return} \PYG{l+m+mi}{1}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
