Some other manipulations are (~A~ and ~B~ are two integers):
- set union: a | b
- set intersection: a & b
- set substraction: a & (~b)
- set negation: all 1-bit -> 0-bit, all 0-bit -> 1-bit 
  - ~a
  - a ^ (~0)
x opposite sign (a -> -a): a ^ (a - 1) (wrong answer)
- set bit: a | (1 << bit)
- clear bit: a & ~(1 << bit)
- test bit: if (a & (1 << bit))
- extract last bit: get the significance of the last 1-bit (its position), keeping all zeros from the last bit to rightmost zero.
  - a ^ (a & (a - 1))
  x 
  x 
- remove last bit: a & (a - 1)
- get ~ALL_ONE_BITS~: ~0
- a ^ a = 0
- 0 ^ a = a